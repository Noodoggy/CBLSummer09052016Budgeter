@model CBLSummer09052016Budgeter.Models.CodeFirst.Transaction

    <div class="panel amber">
        <div class="panel-heading">
            <div class="panel-title">
                <h4> Add New Transaction</h4>
            </div>
        </div>
        <div class="panel-body">


            @using (Html.BeginForm("Create", "Transactions", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountId, "Account", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-md-offset-3">
                            @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-md-offset-3">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", required = true } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5 col-md-offset-1">
                            <div class="input-group">
                                <span class="input-group-addon"><i class="ion-android-calendar"></i></span>
                                <div class="inputer">
                                    <div class="input-wrapper">
                                        <input type="date" style="width: 200px" name="date" class="form-control bootstrap-daterangepicker-basic valid" value="@DateTimeOffset.Now.Year-@DateTimeOffset.Now.Month-@DateTimeOffset.Now.Day.ToString("00")" />
                                    </div>
                                </div>
                            </div>
                           

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-md-offset-3">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TransactionTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-md-offset-3">
                            @Html.DropDownList("TransactionTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TransactionTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TransactionMethodId, "Method", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-md-offset-3">
                            @Html.DropDownList("TransactionMethodId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TransactionMethodId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-md-offset-3">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.EnteredById, htmlAttributes: new { @class = "control-label col-md-2", @EnteredById = User.Identity.Name })
                    @*<div class="form-group">
                            @Html.HiddenFor(model => model.EnteredById, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EnteredById, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EnteredById, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6 col-md-offset-3">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Reconciled)
                                @*@Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.ReconciledAmount)
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.ReconciledAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ReconciledAmount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReconciledAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    <div class="row">
                        <div class="col-sm-9"></div>
                        
                        <div class="form-group">
                            <div>
                                <button type="submit" class="btn btn-floating btn-green btn-ripple"><i class="ion-android-add"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            }



</div>
</div>